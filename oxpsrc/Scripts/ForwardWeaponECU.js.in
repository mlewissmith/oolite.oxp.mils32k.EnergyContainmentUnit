// -*- javascript -*-
// https://wiki.alioth.net/index.php/Oolite_JavaScript_Reference:_World_script_event_handlers

"use strict";

this.name        = "@OXP_IDENTIFIER@:ForwardWeaponECU";
this.author      = "@OXP_AUTHOR@";
this.copyright   = "(C) 2024 @OXP_AUTHOR@";
this.licence     = "@OXP_LICENSE@";
this.description = "@OXP_DESCRIPTION@";
this.version     = "@OXP_VERSION@";

////////////////////////////////////////////////////////////////////////////////
// Debuggery

this.$debug_enabled = false;
this._log           = function(log_message) { log(this.name, log_message) }
this._debug         = function(debug_message) { if (this.$debug_enabled) this._log(debug_message) }

////////////////////////////////////////////////////////////////////////////////
// Internals

this.$active = false;
this.$forwardWeapon = null;

this._forwardWeaponECU = function() {
    var weaponTable = {
        "EQ_WEAPON_PULSE_LASER":"EQ_WEAPON_ECU_PULSE_LASER",
        "EQ_WEAPON_BEAM_LASER":"EQ_WEAPON_ECU_BEAM_LASER",
        "EQ_WEAPON_MINING_LASER":"EQ_WEAPON_ECU_MINING_LASER",
        "EQ_WEAPON_MILITARY_LASER":"EQ_WEAPON_ECU_MILITARY_LASER",
    }
    var forwardWeaponKey = player.ship.forwardWeapon.equipmentKey;
    var forwardWeaponECU = weaponTable[forwardWeaponKey];
    return forwardWeaponECU
}

this._activateECU = function() {
    if ( !this.$active ) {
        this._debug( "_activateECU()" );

        var forwardWeaponECU = this._forwardWeaponECU();
        if (forwardWeaponECU) {
            this.$forwardWeapon = player.ship.forwardWeapon.equipmentKey;
            player.ship.forwardWeapon = forwardWeaponECU;
            player.ship.crosshairs = "ForwardWeaponECU.crosshairs.plist";
            player.consoleMessage("Forward Weapon ECU: activated");
            this.$active = true;
        } else {
            player.ship.setEquipmentStatus("EQ_ECU_FORWARDWEAPON", "EQUIPMENT_DAMAGED");
            return false;
        }
    }
}

this._deactivateECU = function() {
    if ( this.$active ) {
        this._debug( "_deactivateECU()" );

        player.ship.forwardWeapon = this.$forwardWeapon;
        this.$forwardWeapon = null;
        player.ship.crosshairs = null;
        player.consoleMessage("Forward Weapon ECU: deactivated");
        this.$active = false;
    }
}

this._loseLicence = function() {
    player.ship.removeEquipment("EQ_ECU_FORWARDWEAPON_LICENCE");
}

this._expireActiveLicence = function() {
    if ( this.$active ) {
        this._deactivateECU();
        this._loseLicence();
        player.consoleMessage("Forward Weapon ECU: licence expired");
    }
}

////////////////////////////////////////////////////////////////////////////////
// Event handlers : startup

this.startUp = function() {
    this._debug( "startUp()" );
    this._debug( "name        : " + this.name );
    this._debug( "author      : " + this.author );
    this._debug( "copyright   : " + this.copyright );
    this._debug( "license     : " + this.license );
    this._debug( "description : " + this.description );
    this._debug( "version     : " + this.version );
}

this.startUpComplete = function() {
    this._debug( "startUpComplete()" );
}

////////////////////////////////////////////////////////////////////////////////
// Event handlers : end-of-flight

this.shipWillDockWithStation = function(station) {
    this._expireActiveLicence();
}

this.shipWillEnterWitchspace = function(cause, destination) { // API 1.81
    this._expireActiveLicence();
}

////////////////////////////////////////////////////////////////////////////////
// Event handlers : equipment add/remove

this.equipmentAdded = function(equipmentKey) { // API 1.81
    this._debug( "equipmentAdded(" + equipmentKey + ")" );
}

this.equipmentDamaged = function(equipmentKey) {
    this._debug( "equipmentDamaged(" + equipmentKey + ")" );

    if (equipmentKey == "EQ_ECU_FORWARDWEAPON") {
        this._expireActiveLicence();
        this._loseLicence();
    }
}

this.equipmentRemoved = function(equipmentKey) { // API 1.81
    this._debug( "equipmentRemoved(" + equipmentKey + ")" );
}

this.playerBoughtEquipment = function(equipment, paid) { // API 1.89
    this._debug( "playerBoughtEquipment(" + equipment + "," + paid + ")" );

    if (equipment == "EQ_ECU_FORWARDWEAPON_REMOVAL") {
        var credits = EquipmentInfo.infoForKey("EQ_ECU_FORWARDWEAPON").price * 0.1;
        var refundPc = 0.6;
        var refundCredits = credits * refundPc;

        this._loseLicence();
        player.ship.removeEquipment("EQ_ECU_MILITARY_LASER");
        player.ship.removeEquipment("EQ_ECU_MILITARY_LASER_REMOVAL");
        player.credits += refundCredits;
    }
}
